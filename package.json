{
  "name": "feedback-collection-system",
  "version": "1.0.0",
  "description": "College Feedback Collection System with MySQL integration",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "test": "jest",
    "setup": "node setup-db.js"
  },
  "keywords": ["feedback", "mysql", "express", "college", "education"],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "express": "^4.18.2",
    "mysql2": "^3.6.0",
    "cors": "^2.8.5",
    "bcrypt": "^5.1.1",
    "jsonwebtoken": "^9.0.2",
    "dotenv": "^16.3.1",
    "helmet": "^7.0.0",
    "express-rate-limit": "^6.10.0",
    "express-validator": "^7.0.1"
  },
  "devDependencies": {
    "nodemon": "^3.0.1",
    "jest": "^29.7.0"
  },
  "engines": {
    "node": ">=14.0.0"
  }
}

/* 
CREATE .env FILE IN YOUR PROJECT ROOT:

# Database Configuration
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=your_mysql_password
DB_NAME=feedback_system

# Server Configuration
PORT=3000
JWT_SECRET=your_jwt_secret_key_here

# Optional: Database SSL Configuration (for production)
DB_SSL=false
DB_SSL_CA_PATH=
DB_SSL_CERT_PATH=
DB_SSL_KEY_PATH=

# CORS Configuration
CORS_ORIGIN=http://localhost:3000

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

INSTALLATION STEPS:

1. Create new directory and initialize:
   mkdir feedback-system
   cd feedback-system

2. Save package.json and install dependencies:
   npm install

3. Create .env file with your database credentials

4. Run the MySQL setup script in MySQL Workbench or command line

5. Start the server:
   npm run dev  (for development)
   npm start    (for production)

6. Your API will be available at:
   http://localhost:3000/api/

API ENDPOINTS:
- POST /api/feedback          - Submit new feedback
- GET /api/feedback           - Get all feedback (with filters)
- GET /api/feedback/:id       - Get specific feedback
- PUT /api/feedback/:id       - Update feedback
- DELETE /api/feedback/:id    - Delete feedback (admin only)
- GET /api/analytics          - Get feedback analytics
- GET /api/search?q=term      - Search feedback
- GET /api/categories         - Get feedback categories
- GET /api/health             - Health check

MYSQL CONNECTION TEST:
You can test the connection by visiting: http://localhost:3000/api/health
*/
